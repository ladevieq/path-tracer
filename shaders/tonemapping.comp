#extension GL_EXT_buffer_reference : require
#extension GL_EXT_nonuniform_qualifier : require

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(buffer_reference) readonly buffer scene_metadata {
    uint[39] unused;
    int downscale_factor;
};

layout(set = 0, binding = 2, rgba32f) uniform image2D images[];

layout(push_constant) uniform constants {
    scene_metadata scene;
    uint output_image_index;
    uint accumulation_image_index;
} consts;

void main() {
    ivec2 coords = ivec2(gl_GlobalInvocationID.xy) * consts.scene.downscale_factor;

    vec3 color = imageLoad(images[nonuniformEXT(consts.accumulation_image_index)], coords).rgb;
    vec3 out_color = sqrt(color);

    for (uint i = 0; i < consts.scene.downscale_factor; i++) {
        for (uint j = 0; j < consts.scene.downscale_factor; j++) {
            imageStore(images[nonuniformEXT(consts.output_image_index)], coords + ivec2(i, j), vec4(out_color, 1.0));
        }
    }
}
